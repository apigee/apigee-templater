name: MODEL-Gemini-v1
type: feature
description: |
  This feature adds an endpoints with basepath at v1/gemini, and proxies
  requests to the Vertex AI Gemini endpoint in a configured region.

  ## Prerequisites
  - Vertex AI is enabled in the GCP Project.
    ```sh
    gcloud services enable aiplatform.googleapis.com
    ```

  ## Inputs
  - Request prompt input in the form:
    ```js
    {
      "contents": [
        {
          "role": "user",
          "parts": [
            {
              "text": "why is the sky blue?"
            }
          ]
        }
      ]
    }

    ## Outputs
    - Stores successful prompt token count in the **Apigee variable llm.promptTokenCount**
    - Stores successful response token count in the **Apigee variable llm.responseTokenCount**
    - Stores successful total token count in the **Apigee variable llm.totalTokenCount**
    - Normal response from Gemini, something like this:
      ```js
      {
        "candidates": [
          {
            "content": {
              "role": "model",
              "parts": [
                {
                  "text": "The sky is blue because of a phenomenon called **Rayleigh scattering**. Here's a breakdown of why this happens:\n\n**1. Sunlight is White (but Actually Made of Colors):**\n\n* Sunlight might look white to us, but it's actually composed of all the colors of the rainbow – red, orange, yellow, green, blue, indigo, and violet. You can see this when sunlight passes through a prism or raindrops, creating a rainbow.\n\n**2. Sunlight Enters the Earth's Atmosphere:**\n\n* As sunlight travels through space and reaches Earth, it enters our atmosphere. Our atmosphere is made up mostly of nitrogen and oxygen molecules.\n\n**3. Light Interacts with Air Molecules:**\n\n* When sunlight hits these tiny air molecules, it gets scattered in different directions.  This scattering is called **Rayleigh scattering**, named after the British physicist Lord Rayleigh who explained it.\n\n**4. Rayleigh Scattering Favors Shorter Wavelengths:**\n\n* **Here's the key:** Rayleigh scattering is much more effective at scattering **shorter wavelengths** of light than longer wavelengths.\n    * **Shorter wavelengths:**  Blue and violet light have shorter wavelengths.\n    * **Longer wavelengths:** Red and orange light have longer wavelengths.\n\n* Think of it like this: Imagine throwing a small ball (blue light) and a large ball (red light) at a bunch of small obstacles (air molecules). The small ball is much more likely to be deflected in many directions, while the large ball is more likely to go straight through or be deflected less.\n\n**5. Blue Light is Scattered More:**\n\n* Because blue and violet light have shorter wavelengths, they are scattered much more by the air molecules than red and orange light.\n\n**6. We See the Scattered Blue Light:**\n\n* When you look up at the sky on a clear day, you are seeing this scattered blue light.  Blue light is scattered in all directions by the atmosphere, and some of this scattered blue light reaches your eyes from all over the sky.\n\n**Why not Violet then?**\n\nViolet light is scattered even *more* than blue light because it has an even shorter wavelength. However, the sky appears blue to us, not violet, for a couple of reasons:\n\n* **Sunlight Intensity:**  The sun actually emits slightly less violet light than blue light in the visible spectrum.\n* **Our Eyes Are Less Sensitive to Violet:**  Our eyes are more sensitive to blue than violet.\n* **Scattering at Higher Altitudes:** Some violet light is scattered away higher in the atmosphere before it reaches us.\n\n**In Summary:**\n\nThe sky is blue because:\n\n* Sunlight is made of all colors.\n* Air molecules scatter sunlight.\n* Rayleigh scattering is more effective at scattering shorter wavelengths (blue and violet).\n* We see the scattered blue light when we look up at the sky.\n\n**Think about sunsets and sunrises:**\n\nWhen the sun is low on the horizon, the sunlight has to travel through much more of the atmosphere to reach your eyes.  During this longer journey:\n\n* **Most of the blue light is scattered away** before it reaches you.\n* **The longer wavelengths like red and orange** are scattered less and can travel through the atmosphere to reach your eyes.\n\nThis is why sunsets and sunrises often appear red and orange – you're seeing the longer wavelengths of light that haven't been scattered away."
                }
              ]
            }
          }
        ]
      }
      ```
    ```
parameters:
  - name: PROJECT_ID
    displayName: PROJECT_ID
    description: The GCP project id that should be used for the Vertex AI Gemini endpoint.
    default: YOUR_PROJECT_ID
    examples:
      - YOUR_PROJECT_ID
  - name: REGION
    displayName: REGION
    description: The GCP region that should be used for the Vertex AI Gemini endpoint.
    default: europe-west1
    examples:
      - europe-west1
      - us-east1
  - name: MODEL_ID
    displayName: MODEL_ID
    description: The Gemini model to use for the request.
    default: gemini-2.5-flash
    examples:
      - gemini-2.5-flash
      - gemini-2.5-pro
  - name: GEMINI_PATH
    displayName: GEMINI_PATH
    description: Configuration input for GEMINI_PATH
    default: europe-west1-aiplatform.googleapis.com/v1beta1/projects/apigee-prod13/locations/europe-west1/endpoints/openapi/chat/completions
    examples: []
endpointFlows: []
targetFlows: []
endpoints:
  - name: gemini
    basePath: /v1/gemini
    routes:
      - name: default
        target: gemini
    flows: []
    faultRules: []
targets:
  - name: gemini
    url: https://{propertyset.gemini.GEMINI_PATH}
    auth: GoogleAccessToken
    scopes:
      - https://www.googleapis.com/auth/cloud-platform
    flows:
      - name: PreFlow
        mode: Request
        steps:
          - name: JS-SetModel
      - name: PostFlow
        mode: Response
        steps:
          - name: EV-StoreModelInfo
      - name: EventFlow
        mode: Response
        steps: []
    faultRules: []
    httpTargetConnection:
      Properties: {}
      URL:
        _text: https://{propertyset.gemini.GEMINI_PATH}
      Authentication:
        GoogleAccessToken:
          Scopes:
            Scope:
              _text: https://www.googleapis.com/auth/cloud-platform
policies:
  - name: EV-StoreModelInfo
    type: ExtractVariables
    content:
      ExtractVariables:
        _attributes:
          continueOnError: "false"
          enabled: "true"
          name: EV-StoreModelInfo
        DisplayName:
          _text: EV-StoreModelInfo
        Properties: {}
        IgnoreUnresolvedVariables:
          _text: "true"
        Variable:
          _attributes:
            name: model
          Pattern:
            _text: "{propertyset.gemini.MODEL_ID}"
        JSONPayload:
          Variable:
            - _attributes:
                name: promptTokenCount
              JSONPath:
                _text: $.usage.prompt_tokens
            - _attributes:
                name: responseTokenCount
              JSONPath:
                _text: $.usage.completion_tokens
            - _attributes:
                name: totalTokenCount
              JSONPath:
                _text: $.usage.total_tokens
        Source:
          _attributes:
            clearPayload: "false"
          _text: response
        VariablePrefix:
          _text: llm
  - name: JS-SetModel
    type: Javascript
    content:
      Javascript:
        _attributes:
          continueOnError: "false"
          enabled: "true"
          timeLimit: "200"
          name: JS-SetModel
        DisplayName:
          _text: JS-SetModel
        Properties: {}
        ResourceURL:
          _text: jsc://set-model.js
resources:
  - name: set-model.js
    type: jsc
    content: |-
      var requestObject = request.content.asJSON;
      var model = context.getVariable("propertyset.gemini.MODEL_ID");

      if (requestObject) {
        if (model.startsWith("google/"))
          requestObject["model"] = model;
        else
          requestObject["model"] = "\"google/" + model + "\"";
      }

      context.setVariable('request.content', JSON.stringify(requestObject));
  - name: gemini.properties
    type: properties
    content: |
      MODEL_ID={MODEL_ID}
      GEMINI_PATH={GEMINI_PATH}
